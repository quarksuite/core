#+TITLE: Changelog

All notable changes to this project will be documented in this file.

The format is based on [[https://keepachangelog.com/en/1.0.0/][Keep a Changelog]] and this project adheres to [[https://semver.org/spec/v2.0.0.html][Semantic Versioning]].

* Table of Contents :TOC@3:
- [[#v020---2020-05-27][v0.2.0 - 2020-05-27]]
  - [[#added][Added]]
    - [[#color-conversion][color conversion]]
  - [[#changed][Changed]]
    - [[#color-adjustment][color adjustment]]
    - [[#color-mixture][color mixture]]
    - [[#color-schemes][color schemes]]
    - [[#color-palette-color-scale][+color palette+ color scale]]
- [[#v011---2020-04-29][v0.1.1 - 2020-04-29]]
  - [[#changed-1][Changed]]
    - [[#color-conversion-1][color conversion]]
- [[#v010---2021-04-13][v0.1.0 - 2021-04-13]]
  - [[#added-1][Added]]
    - [[#functional-utilities][functional utilities]]
    - [[#color-conversion-2][color conversion]]
    - [[#scheme-functions][scheme functions]]
    - [[#color-accessibility][color accessibility]]
  - [[#changed-2][Changed]]
    - [[#scheme-functions-1][scheme functions]]
    - [[#output-functions][output functions]]
  - [[#removed][Removed]]
    - [[#functional-utilities-1][functional utilities]]

* v0.2.0 - 2020-05-27

** Added

*** color conversion

+ Added /non-standard/ Oklab (LCh) color format support

** Changed

*** color adjustment

+ All color adjustment functions are now implemented through the Oklab color space for better hue
  linearity and lightness/chroma predictions
+ Adjustments are perceptually uniform and blue hues no longer shift toward purple

*** color mixture

+ Color mixing now uses simpler interpolation formula through the Oklab color space

*** color schemes

+ All basic color schemes have their output explicitly slotted into a fixed scale. This means
  =custom()= is the only true dyanamic color scheme generator. Use it carefully

*** +color palette+ color scale

+ =color_palette.js= module renamed to =color_scale.js= (which is a better description of its purpose)
+ New interpolation formula makes =contrast= parameter slightly more sensitive (particularly with shades)

* v0.1.1 - 2020-04-29

** Changed

*** color conversion

+ refactored conversion logic to be simpler

* v0.1.0 - 2021-04-13

The initial release of Quarks System Core adds several improvements over QuarkSuite 1. For a full
overview of what's different from legacy, consult the [[https://github.com/quarksuite/legacy/blob/master/CHANGELOG.md#v500---2020-12-05][Changelog of QuarkSuite 1]].

This project no longer relies on Node or NPM and is instead served directly from the Arweave
permaweb via [[https://nest.land][nest.land]]. Use =https://x.nest.land/quarksuite:core/mod.js= in a browser console or in
your scripts to get started.

TypeScript is also gone to remove the compile step that would conflict with using the library in its
target environments. Basic type information is provided for development via TSDoc comments.

Top level source files are now modules by default, and the below modules should be preferred for importing:

+ =mod.js=: the entry point for the entire public API (aggregates the following)
  - =utilities.js=: contains advanced functional utilities
  - =color.js=: contains all color functions
  - =typography.js=: contains all typography functions
  - =modular_scale.js=: contains all functions for using modular scales
  - =design_tokens.js=: contains all build functions

Lastly, I've used literate programming through the development of Quarks System Core to clarify the
implementation details, so you'll find [[https://github.com/quarksuite/core/blob/main/README.org#source-code][the documentation is also the source]].

** Added

*** functional utilities

+ =compose= function for straightforward composition

*** color conversion

+ =device-cmyk=, =hwb=, =lab=, =lch= CSS formats now valid

*** scheme functions

+ simplified =analogous=, =splitComplementary=, =triadic=, =tetradic/dualComplementary=, =square=
  functions provided for basic schemes; no longer need to set modifiers

*** color accessibility

+ =contrast= function for validating or filtering palettes with WCAG color contrast ratios
  recommendations

** Changed

*** scheme functions

+ output of basic schemes slightly rearranged
+ =custom= color scheme generation modified to create colors around the input color symmetrically

*** output functions

+ =yaml= data export added
+ =tw= changed to =tailwind=
+ =sd= changed to =styledict=

** Removed

*** functional utilities

+ =bind= scrapped in favor of JavaScript's native =Function.bind=
